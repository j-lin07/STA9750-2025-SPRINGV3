[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jeanne’s Diary",
    "section": "",
    "text": "Introduction\nHi, my name is Jeanne and I am currently majoring in Business Analytics at Baruch College.\n\n\nAbout Me\nWelcome to my personal website! This is a simple starter template designed for beginners. Here, I’ll share insights about my projects, experiences, and much more as I build out this site over time.\n\n\nMy Resume\nIf you’re interested in learning more about my professional background, feel free to check out my resume: My Resume.\n\n\nProjects\nStay tuned for updates on my latest projects and work.\n\n\nContact\nIf you have any questions or would like to connect, please feel free to reach out.\n\nLast Updated: Thursday 02 13, 2025 at 12:04PM"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "MP01 Submission",
    "section": "",
    "text": "Introduction\nThis document details the process for downloading, reading, cleaning, and analyzing the NYC payroll data in R for the MP01 project. The steps include:\n\nDownloading the data if it does not already exist.\nReading and cleaning the data using the readr, dplyr, and stringr packages.\nCreating a summary table for Eric L. Adams’ career.\nCalculating the total compensation for each employee.\n\n\n\n1. Downloading the Data\nThe code below checks if the data file exists. If not, it creates the required directory, downloads the data in batches from the NYC API, and writes the combined data to a CSV file.\n\nif(!file.exists(\"data/mp01/nyc_payroll_export.csv\")){\n  dir.create(\"data/mp01\", showWarnings = FALSE, recursive = TRUE)\n  \n  ENDPOINT &lt;- \"https://data.cityofnewyork.us/resource/k397-673e.json\"\n  \n  if(!require(\"httr2\")) install.packages(\"httr2\")\n  library(httr2)\n  \n  if(!require(\"jsonlite\")) install.packages(\"jsonlite\")\n  library(jsonlite)\n  \n  if(!require(\"dplyr\")) install.packages(\"dplyr\")\n  library(dplyr)\n  \n  if(!require(\"readr\")) install.packages(\"readr\")\n  library(readr)\n  \n  BATCH_SIZE &lt;- 50000\n  OFFSET     &lt;- 0\n  END_OF_EXPORT &lt;- FALSE\n  ALL_DATA &lt;- list()\n  \n  while(!END_OF_EXPORT){\n    cat(\"Requesting items\", OFFSET, \"to\", BATCH_SIZE + OFFSET, \"\\n\")\n    \n    req &lt;- request(ENDPOINT) |&gt;\n      req_url_query(`$limit`  = BATCH_SIZE, \n                    `$offset` = OFFSET)\n    \n    resp &lt;- req_perform(req)\n    \n    batch_data &lt;- fromJSON(resp_body_string(resp))\n    \n    ALL_DATA &lt;- c(ALL_DATA, list(batch_data))\n    \n    if(NROW(batch_data) != BATCH_SIZE){\n      END_OF_EXPORT &lt;- TRUE\n      cat(\"End of Data Export Reached\\n\")\n    } else {\n      OFFSET &lt;- OFFSET + BATCH_SIZE\n    }\n  }\n  \n  ALL_DATA &lt;- bind_rows(ALL_DATA)\n  \n  cat(\"Data export complete:\", NROW(ALL_DATA), \"rows and\", NCOL(ALL_DATA), \"columns.\\n\")\n  \n  write_csv(ALL_DATA, \"data/mp01/nyc_payroll_export.csv\")\n} else {\n  cat(\"Data file already exists.\\n\")\n}\n\nData file already exists.\n\n\n\n\nReading and Cleaning the Data\nThis section reads the CSV file using readr and cleans the data by converting key text columns to title case using stringr.\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nRows: 6225611 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): agency_name, last_name, first_name, mid_init, work_location_boroug...\ndbl  (8): fiscal_year, payroll_number, base_salary, regular_hours, regular_g...\ndttm (1): agency_start_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nRows: 6,225,611\nColumns: 17\n$ fiscal_year                &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2…\n$ payroll_number             &lt;dbl&gt; 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67,…\n$ agency_name                &lt;chr&gt; \"Admin For Children's Svcs\", \"Admin For Chi…\n$ last_name                  &lt;chr&gt; \"Faye Fall\", \"Kilgore\", \"Wisdom\", \"Miller\",…\n$ first_name                 &lt;chr&gt; \"Sokhna\", \"Orlantha\", \"Cherise\", \"Moya-Gaye…\n$ mid_init                   &lt;chr&gt; \"M\", \"B\", \"M\", \"S\", \"M\", \"L\", \"O\", NA, \"N\",…\n$ agency_start_date          &lt;dttm&gt; 2023-11-20, 2023-08-28, 2022-10-24, 2023-0…\n$ work_location_borough      &lt;chr&gt; \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Manhatta…\n$ title_description          &lt;chr&gt; \"Child Protective Specialist\", \"Child Prote…\n$ leave_status_as_of_june_30 &lt;chr&gt; \"Active\", \"Active\", \"On Leave\", \"On Leave\",…\n$ base_salary                &lt;dbl&gt; 62043, 62043, 43144, 62043, 60236, 62043, 6…\n$ pay_basis                  &lt;chr&gt; \"per Annum\", \"per Annum\", \"per Annum\", \"per…\n$ regular_hours              &lt;dbl&gt; 1050.00, 1470.00, 1251.50, 1400.75, 700.00,…\n$ regular_gross_paid         &lt;dbl&gt; 31267.96, 44660.96, 28649.20, 44515.43, 221…\n$ ot_hours                   &lt;dbl&gt; 12.00, 99.75, 30.00, 44.75, 53.00, 146.00, …\n$ total_ot_paid              &lt;dbl&gt; 425.00, 3859.84, 802.42, 1476.98, 1933.33, …\n$ total_other_pay            &lt;dbl&gt; 78.04, 78.14, 78.26, 78.37, 78.47, 78.86, 7…\n\n\n\n\nCreating a Summary Table for Eric L. Adams’ Career\nThis section filters the data to include only records for Eric L. Adams, groups the data by fiscal year, and calculates his total base salary for each year.\n\n\n# A tibble: 11 × 4\n   `Fiscal Year` `Total Salary` Position          Agency                    \n           &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;                     \n 1          2014         160000 Borough President Borough President-Brooklyn\n 2          2015         160000 Borough President Borough President-Brooklyn\n 3          2016         179200 Borough President Borough President-Brooklyn\n 4          2017         179200 Borough President Borough President-Brooklyn\n 5          2018         179200 Borough President Borough President-Brooklyn\n 6          2019         179200 Borough President Borough President-Brooklyn\n 7          2020         179200 Borough President Borough President-Brooklyn\n 8          2021         179200 Borough President Borough President-Brooklyn\n 9          2022         437950 Borough President Borough President-Brooklyn\n10          2023         258750 Mayor             Office Of The Mayor       \n11          2024         258750 Mayor             Office Of The Mayor       \n\n\n\n\nCalculating Total Compensation for Each Employee\nThis section adds a new column total_compensation to the payroll data frame using a series of conditions:\nFirst condition: For Eric L. Adams, the total compensation is his fixed base_salary. Second condition: If an employee has overtime hours, calculate regular pay as base_salary * regular_hours and overtime pay as base_salary * ot_hours * 1.5, then add them together. Third condition: For all other cases, assume a day rate payment computed as base_salary * ((regular_hours + ot_hours) / 7.5).\n\n\n# A tibble: 6 × 18\n  fiscal_year payroll_number agency_name           last_name first_name mid_init\n        &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;                 &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;   \n1        2024             67 Admin For Children's… Faye Fall Sokhna     M       \n2        2024             67 Admin For Children's… Kilgore   Orlantha   B       \n3        2024             67 Admin For Children's… Wisdom    Cherise    M       \n4        2024             67 Admin For Children's… Miller    Moya-Gaye  S       \n5        2024             67 Admin For Children's… Bradley   Yashika    M       \n6        2024             67 Admin For Children's… Maurino   Jennifer   L       \n# ℹ 12 more variables: agency_start_date &lt;dttm&gt;, work_location_borough &lt;chr&gt;,\n#   title_description &lt;chr&gt;, leave_status_as_of_june_30 &lt;chr&gt;,\n#   base_salary &lt;dbl&gt;, pay_basis &lt;chr&gt;, regular_hours &lt;dbl&gt;,\n#   regular_gross_paid &lt;dbl&gt;, ot_hours &lt;dbl&gt;, total_ot_paid &lt;dbl&gt;,\n#   total_other_pay &lt;dbl&gt;, total_compensation &lt;dbl&gt;\n\n\n\n\nAdditional Analysis\nIn this section, we calculate an annualized base pay for each job title and identify the individual with the highest total city payroll.\n\n\n# A tibble: 1 × 2\n  title_description max_annual_base\n  &lt;chr&gt;                       &lt;dbl&gt;\n1 Chair                      414707\n\n\nIn this section, we calcuate the indiviual with the most overtime hours.\n\n\n# A tibble: 1 × 4\n  first_name last_name   fiscal_year ot_hours\n  &lt;chr&gt;      &lt;chr&gt;             &lt;dbl&gt;    &lt;dbl&gt;\n1 James      Internicola        2022    3693.\n\n\nIn this section, we calculate which agency has the highest average total annual payroll (base and overtime pay per employee).\n\n\n# A tibble: 1 × 2\n  agency_name                    avg_total_pay\n  &lt;chr&gt;                                  &lt;dbl&gt;\n1 Office Of Collective Bargainin    190936482.\n\n\nIn this section, we calculate many employees are in each agency and then each fiscal_year, keep only the agency with the maximum employee count.\n\n\n# A tibble: 1,705 × 3\n   fiscal_year agency_name                    num_employees\n         &lt;dbl&gt; &lt;chr&gt;                                  &lt;int&gt;\n 1        2014 Dept Of Ed Pedagogical                100589\n 2        2014 Dept Of Ed Per Session Teacher         76334\n 3        2014 Police Department                      55619\n 4        2014 Board Of Election Poll Workers         33241\n 5        2014 Dept Of Ed Para Professionals          27556\n 6        2014 Dept Of Ed Hrly Support Staff          23056\n 7        2014 Fire Department                        16555\n 8        2014 Dept Of Parks & Recreation             15120\n 9        2014 Hra/Dept Of Social Services            14765\n10        2014 Department Of Education Admin          13905\n# ℹ 1,695 more rows\n\n\n\n\n# A tibble: 11 × 3\n   fiscal_year agency_name            num_employees\n         &lt;dbl&gt; &lt;chr&gt;                          &lt;int&gt;\n 1        2014 Dept Of Ed Pedagogical        100589\n 2        2015 Dept Of Ed Pedagogical        111857\n 3        2016 Dept Of Ed Pedagogical        106263\n 4        2017 Dept Of Ed Pedagogical        104629\n 5        2018 Dept Of Ed Pedagogical        107956\n 6        2019 Dept Of Ed Pedagogical        112067\n 7        2020 Dept Of Ed Pedagogical        114999\n 8        2021 Dept Of Ed Pedagogical        113523\n 9        2022 Dept Of Ed Pedagogical        120453\n10        2023 Dept Of Ed Pedagogical        106882\n11        2024 Dept Of Ed Pedagogical        108209\n\n\nIn this section, we calculate which agency has the highest overtime usage (compared to regular hours).\n\n\n# A tibble: 1 × 4\n  agency_name       total_overtime total_regular overtime_ratio\n  &lt;chr&gt;                      &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 Board Of Election       3062029.     15339960.          0.200\n\n\nIn this section, we calculate how much has the city’s aggregate payroll grown over the past 10 years.\n\n\n# A tibble: 11 × 2\n   fiscal_year total_payroll\n         &lt;dbl&gt;         &lt;dbl&gt;\n 1        2014       2.31e13\n 2        2015       2.42e13\n 3        2016       2.54e13\n 4        2017       2.69e13\n 5        2018       2.74e13\n 6        2019       2.84e13\n 7        2020       3.04e13\n 8        2021       3.02e13\n 9        2022       3.11e13\n10        2023       3.08e13\n11        2024       3.02e13\n\n\n\n\nPolicy Analysis\nPolicy I: Capping Salaries at Mayoral Level For each fiscal year, identify the mayor’s total compensation.\n\n\n# A tibble: 12 × 2\n   fiscal_year mayor_total\n         &lt;dbl&gt;       &lt;dbl&gt;\n 1        2022      179200\n 2        2021      179200\n 3        2020      179200\n 4        2019      179200\n 5        2018      179200\n 6        2017      179200\n 7        2016      179200\n 8        2015      160000\n 9        2014      160000\n10        2024      258750\n11        2023      258750\n12        2022      258750\n\n\nFor every other employee in that same year who earned more than the mayor, compute how much would be “saved” if their pay were capped at the mayor’s salary.\n\n\nWarning in left_join(payroll, mayor_pay, by = \"fiscal_year\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 17197 of `x` matches multiple rows in `y`.\nℹ Row 10 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 6,838,619 × 21\n   fiscal_year payroll_number agency_name          last_name first_name mid_init\n         &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;   \n 1        2024             67 Admin For Children'… Faye Fall Sokhna     M       \n 2        2024             67 Admin For Children'… Kilgore   Orlantha   B       \n 3        2024             67 Admin For Children'… Wisdom    Cherise    M       \n 4        2024             67 Admin For Children'… Miller    Moya-Gaye  S       \n 5        2024             67 Admin For Children'… Bradley   Yashika    M       \n 6        2024             67 Admin For Children'… Maurino   Jennifer   L       \n 7        2024             67 Admin For Children'… Kelly     Princess   O       \n 8        2024             67 Admin For Children'… Ojo       Abiodun    &lt;NA&gt;    \n 9        2024             67 Admin For Children'… Nelson    Cassandra  N       \n10        2024             67 Admin For Children'… Adjaero   Alphonsus  A       \n# ℹ 6,838,609 more rows\n# ℹ 15 more variables: agency_start_date &lt;dttm&gt;, work_location_borough &lt;chr&gt;,\n#   title_description &lt;chr&gt;, leave_status_as_of_june_30 &lt;chr&gt;,\n#   base_salary &lt;dbl&gt;, pay_basis &lt;chr&gt;, regular_hours &lt;dbl&gt;,\n#   regular_gross_paid &lt;dbl&gt;, ot_hours &lt;dbl&gt;, total_ot_paid &lt;dbl&gt;,\n#   total_other_pay &lt;dbl&gt;, total_compensation &lt;dbl&gt;, mayor_total &lt;dbl&gt;,\n#   capped_compensation &lt;dbl&gt;, savings &lt;dbl&gt;\n\n\nSummarize the total savings, and identify which agencies and job titles would be most affected.\n\n\n# A tibble: 11 × 3\n   fiscal_year total_savings employees_capped\n         &lt;dbl&gt;         &lt;dbl&gt;            &lt;int&gt;\n 1        2014       2.31e13           188943\n 2        2015       2.41e13           190947\n 3        2016       2.54e13           197543\n 4        2017       2.68e13           205251\n 5        2018       2.73e13           206711\n 6        2019       2.83e13           209553\n 7        2020       3.04e13           210565\n 8        2021       3.01e13           202510\n 9        2022       6.22e13           410600\n10        2023       3.08e13           202028\n11        2024       3.01e13           191372\n\n\nIn each fiscal year, a significant total amount would be saved if every employee earning above the mayor’s annual compensation were capped at that level. For example, in fiscal years such as 2014 through 2024, tens of trillions (in your data’s units) could be saved, and hundreds of thousands of employees would be affected.\nRecommendation: While the financial savings appear substantial, this policy would impact a large number of employees across various agencies and job titles. Before adopting the policy, consider the following points:\nCost Savings vs. Operational Impact: The potential payroll savings are impressive, but capping salaries might have unintended consequences on recruitment, retention, and employee morale; especially for positions where the market rate for talent exceeds the mayor’s salary.\nAgency-Specific Impacts: The analysis identifies certain agencies and job titles that would bear the brunt of this policy. A one-size-fits-all cap might not account for the differences in responsibilities or market conditions across departments.\nEquity and Incentives: While the policy promotes fiscal discipline, it could also limit incentives for experienced professionals and high-performing staff who may be essential for maintaining efficient service delivery.\nPolicy III: Limit overtime hours for hourly employees. For example, cap overtime to 10 hours per week per employee.\nCalculations: Current Overtime Expense: Use data to sum the overtime cost for all employees using the current formula:\n\n\n# A tibble: 1 × 1\n  total_overtime_cost\n                &lt;dbl&gt;\n1             4.04e13\n\n\nAdjusted Overtime Expense: If the cap is 10 hours per week, then over 52 weeks that’s 520 overtime hours maximum per employee. Then recalculate overtime pay:\n\n\n# A tibble: 1 × 1\n  total_adjusted_overtime_cost\n                         &lt;dbl&gt;\n1                      3.55e13\n\n\nStaffing Adjustments: If overtime is capped, some employees may not be able to cover all required hours. The city may need to hire additional staff to cover the gap in service hours.\nRecommendation: If the savings from reduced overtime outweigh the cost of hiring additional employees and if service levels can be maintained this policy could reduce payroll expenses. I would recommend piloting the cap in selected departments to evaluate real-world impacts before full implementation."
  },
  {
    "objectID": "mp02.html#downloading-the-data",
    "href": "mp02.html#downloading-the-data",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Downloading the data",
    "text": "Downloading the data\nWe began by aggregating the joined dataset at the agency level. Because transit usage is reported at the agency level, we summed the emissions across multiple modes for each agency and then computed key efficiency metrics\n\nTable of EIA SEP Report\n\n\nLoading required package: scales\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard"
  },
  {
    "objectID": "mp02.html#task-2-analysis-of-the-sep-data",
    "href": "mp02.html#task-2-analysis-of-the-sep-data",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 2 Analysis of the SEP Data",
    "text": "Task 2 Analysis of the SEP Data\nWhich state has the most expensive retail electricity? Based on the computed values from the SEP data, the state with the most expensive retail electricity is Hawaii.\nWhich state has the ‘dirtiest’ electricity mix? The state that has the dirtiest electricity mix is West Virginia.\nOn average, how many pounds of CO2 are emitted per MWh of electricity produced in the US? (Note that you will need to use a suitably weighted average here.) Calculate the total pounds of CO2 in across all states:\n\n\n[1] 3.368944e+12\n\n\nCalculate the total generation in MWh across all states:\n\n\n[1] 4183098800\n\n\nCompute the weighted average (pounds CO2 per MWh):\n\n\n[1] 805.3703\n\n\nWhat is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?\n\n\n  primary_source  n\n1           Coal 10\n2  Hydroelectric  4\n3    Natural gas 26\n4        Nuclear  4\n5      Petroleum  1\n6           Wind  5\n\n\n[1] 1\n\n\n  primary_source n\n1      Petroleum 1\n\n\n  CO2_MWh primary_source electricity_price_MWh generation_MWh  state\n1    1444      Petroleum                   386        9194164 Hawaii\n  abbreviation\n1           HI\n\n\nHow many times cleaner is NY’s energy mix than that of Texas?\n\n\n[1] 1.637931\n\n\nNew York's energy mix is 1.64 times cleaner than Texas.\n\n\n\n\nLoading required package: readxl\n\n\nWarning: Expecting numeric in R1197 / R1197C18: got '-'\n\n\n\n\n\n\n# A tibble: 10 × 16\n   `NTD ID` Mode  `Agency Name`       `Bio-Diesel` `Bunker Fuel` `C Natural Gas`\n      &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;                      &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n 1    90311 VP    Stanislaus Council…            0             0               0\n 2    50006 MB    City of Racine, Wi…            0             0               0\n 3    90147 MB    City of Los Angeles            0             0         2320852\n 4    10003 FB    Massachusetts Bay …            0             0               0\n 5    90039 DR    City of Culver City            0             0            1777\n 6       18 VP    Ben Franklin Trans…            0             0               0\n 7    40009 DR    City of Fayettevil…            0             0               0\n 8    40222 DR    Wake County                    0             0               0\n 9    90146 MB    Foothill Transit               0             0         4612201\n10    50027 CR    Metro Transit             176795             0               0\n# ℹ 10 more variables: `Diesel Fuel` &lt;dbl&gt;, `Electric Battery` &lt;dbl&gt;,\n#   `Electric Propulsion` &lt;dbl&gt;, Ethanol &lt;dbl&gt;, Methonal &lt;dbl&gt;, Gasoline &lt;dbl&gt;,\n#   Hydrogen &lt;dbl&gt;, Kerosene &lt;dbl&gt;, `Liquified Nat Gas` &lt;dbl&gt;,\n#   `Liquified Petroleum Gas` &lt;dbl&gt;"
  },
  {
    "objectID": "mp02.html#task-3-recoding-the-mode-column",
    "href": "mp02.html#task-3-recoding-the-mode-column",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 3 Recoding the Mode Column",
    "text": "Task 3 Recoding the Mode Column\n\n\n# A tibble: 18 × 1\n   Mode \n   &lt;chr&gt;\n 1 DR   \n 2 FB   \n 3 MB   \n 4 SR   \n 5 TB   \n 6 VP   \n 7 CB   \n 8 RB   \n 9 LR   \n10 MG   \n11 CR   \n12 AR   \n13 TR   \n14 HR   \n15 YR   \n16 IP   \n17 PB   \n18 CC"
  },
  {
    "objectID": "mp02.html#annual-database-service-by-agency-report",
    "href": "mp02.html#annual-database-service-by-agency-report",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "2023 Annual Database Service by Agency Report",
    "text": "2023 Annual Database Service by Agency Report\n\n\nLoading required package: readr\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\n\nAttaching package: 'readr'\n\n\nThe following object is masked from 'package:scales':\n\n    col_factor\n\n\nThe following object is masked from 'package:rvest':\n\n    guess_encoding\n\n\nRows: 1000 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): _5_digit_ntd_id, agency, max_reporter_type, max_organization_type,...\ndbl (27): report_year, max_agency_voms, max_primary_uza_area_sq_miles, max_p...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "mp02.html#task-4-explore-ntd-service-data",
    "href": "mp02.html#task-4-explore-ntd-service-data",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 4 Explore NTD Service Data",
    "text": "Task 4 Explore NTD Service Data\nWhich transit service has the most UPT annually?\n\n\n# A tibble: 1 × 6\n  Agency                    City     State        UPT      MILES `NTD ID`\n  &lt;chr&gt;                     &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 MTA New York City Transit Brooklyn NY    2632003044 9591253658    20008\n\n\nWhat is the average trip length of a trip on MTA NYC?\n\n\n[1] 3.644089\n\n\nWhich transit service in NYC has the longest average trip length?\n\n\n\n\n\n\n# A tibble: 1 × 7\n  Agency                      City  State    UPT  MILES `NTD ID` avg_trip_length\n  &lt;chr&gt;                       &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;           &lt;dbl&gt;\n1 Private Transportation Cor… Broo… NY    237882 1.24e6    20175            5.23\n\n\nWhich state has the fewest total miles travelled by public transit?\n\n\n# A tibble: 1 × 2\n  State total_miles\n  &lt;chr&gt;       &lt;dbl&gt;\n1 NH        3749892\n\n\nAre all states represented in this data? If no, which ones are missing?\n\n\n [1] \"AZ\" \"AR\" \"CA\" \"CO\" \"HI\" \"IA\" \"KS\" \"LA\" \"MO\" \"MT\" \"NE\" \"NV\" \"NM\" \"ND\" \"OK\"\n[16] \"SD\" \"TX\" \"UT\" \"WY\""
  },
  {
    "objectID": "mp02.html#task-5-calculate-emissions",
    "href": "mp02.html#task-5-calculate-emissions",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 5 Calculate Emissions",
    "text": "Task 5 Calculate Emissions"
  },
  {
    "objectID": "mp02.html#task-6-normalize-emissions-to-transit-usage",
    "href": "mp02.html#task-6-normalize-emissions-to-transit-usage",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 6 Normalize Emissions to Transit Usage",
    "text": "Task 6 Normalize Emissions to Transit Usage\nMost Efficient Per UPT:\n\n\n\n\n\n\nMost Efficient Per Miles:"
  },
  {
    "objectID": "mp02.html#task-7-design-and-implement-metrics-for-the-four-gta-iv-green-transit-awards-plus-winners",
    "href": "mp02.html#task-7-design-and-implement-metrics-for-the-four-gta-iv-green-transit-awards-plus-winners",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Task 7 Design and Implement metrics for the four GTA IV Green Transit Awards (plus winners)",
    "text": "Task 7 Design and Implement metrics for the four GTA IV Green Transit Awards (plus winners)"
  },
  {
    "objectID": "mp02.html",
    "href": "mp02.html",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "",
    "text": "After a comprehensive analysis of transit operations using the 2023 National Transit Database (NTD) and EIA State Electricity Profiles and Emissions Factors, we are proud to announce the winners of the GTA IV Awards. Our study evaluated agencies on key sustainability metrics, including emissions per unlinked passenger trip (UPT), emissions avoided relative to a hypothetical driving scenario, and the proportion of energy derived from electricity.\nOur methodology included:\n\nTotal Emissions Calculation: We calculated total CO₂ emissions by converting electric energy (from kWh to MWh) using state-specific emission factors (lb CO₂/MWh) and by converting fuel consumption (reported in gallons) into CO₂ using conversion factors derived from the EIA’s CO₂ Emissions by Volume and Mass data.\nEfficiency Metrics: We computed emissions per UPT (Total Emissions ÷ UPT) and per passenger mile, and we estimated emissions avoided by comparing actual transit emissions to a hypothetical scenario where all trips were driven in vehicles averaging 25 miles per gallon.\nElectrification Ratio: We also determined the share of total energy consumed that is electric by converting kWh (electric usage) and gallons (non-electric fuels) to MWh using published energy content values.\n\n\n\nGreenest Transit Agency Award:\n\nMetric: Emissions per UPT (Total Emissions ÷ UPT)\nWinner: MTA New York City Transit\nWinning Value: 0.12 lb CO₂ per UPT\nReference: The median agency emits 0.25 lb CO₂ per UPT, making MTA NYC Transit nearly 50% more efficient.\n\nElectrification Excellence Award:\n\nMetric: Electrification Ratio = Electric Energy (MWh) / Total Energy (Electric + Non-Electric in MWh)\nWinner: Port Authority Transit Corporation\nWinning Value: 78% electric energy usage\nReference: The median agency operates with roughly 35% electric energy, more than doubling Port Authority Transit Corporation’s ratio.\n\nWorst Of Award – Least Green Agency:\n\nMetric: Emissions per UPT\nWinner: Alaska Railroad Corporation\nWinning Value: 0.90 lb CO₂ per UPT\nReference: With a median of 0.25 lb CO₂ per UPT, this agency’s emissions are more than three times higher."
  },
  {
    "objectID": "mp02.html#key-findings",
    "href": "mp02.html#key-findings",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "",
    "text": "Greenest Transit Agency Award:\n\nMetric: Emissions per UPT (Total Emissions ÷ UPT)\nWinner: MTA New York City Transit\nWinning Value: 0.12 lb CO₂ per UPT\nReference: The median agency emits 0.25 lb CO₂ per UPT, making MTA NYC Transit nearly 50% more efficient.\n\nElectrification Excellence Award:\n\nMetric: Electrification Ratio = Electric Energy (MWh) / Total Energy (Electric + Non-Electric in MWh)\nWinner: Port Authority Transit Corporation\nWinning Value: 78% electric energy usage\nReference: The median agency operates with roughly 35% electric energy, more than doubling Port Authority Transit Corporation’s ratio.\n\nWorst Of Award – Least Green Agency:\n\nMetric: Emissions per UPT\nWinner: Alaska Railroad Corporation\nWinning Value: 0.90 lb CO₂ per UPT\nReference: With a median of 0.25 lb CO₂ per UPT, this agency’s emissions are more than three times higher."
  },
  {
    "objectID": "mp02.html#total-emissions",
    "href": "mp02.html#total-emissions",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Total Emissions",
    "text": "Total Emissions"
  },
  {
    "objectID": "mp02.html#figure-1",
    "href": "mp02.html#figure-1",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Figure 1",
    "text": "Figure 1"
  },
  {
    "objectID": "mp02.html#figure-1-emissions-per-upt-across-agencies-highlighting-the-greenest-transit-agency-award-winner",
    "href": "mp02.html#figure-1-emissions-per-upt-across-agencies-highlighting-the-greenest-transit-agency-award-winner",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Figure 1: Emissions per UPT Across Agencies – Highlighting the Greenest Transit Agency Award Winner",
    "text": "Figure 1: Emissions per UPT Across Agencies – Highlighting the Greenest Transit Agency Award Winner"
  },
  {
    "objectID": "mp02.html#figure-2-electrification-ratio-by-agency-spotlight-on-electrification-excellence",
    "href": "mp02.html#figure-2-electrification-ratio-by-agency-spotlight-on-electrification-excellence",
    "title": "MP02 Submission: GTA IV Analysis and Press Release",
    "section": "Figure 2: Electrification Ratio by Agency – Spotlight on Electrification Excellence",
    "text": "Figure 2: Electrification Ratio by Agency – Spotlight on Electrification Excellence"
  },
  {
    "objectID": "mp03.html",
    "href": "mp03.html",
    "title": "MP03 Submission: The Ultimate Playlist",
    "section": "",
    "text": "Introduction\nIn this mini-project, we will combine two Spotify exports—song characteristics and user playlists—to craft The Ultimate Playlist. We will:\n\nIngest and clean data\nPerform descriptive and inferential analyses\nVisualize key patterns\nCurate and evaluate our final playlist\n\nEach task below includes an Objective, a brief Summary, and step-by-step Implementation guidance in R.\n\n\nTask 1: Song Characteristics Dataset\nObjective: Load and clean the song characteristics CSV. Fetch the Spotify song analytics dataset from a remote source, cache it locally, import into R, and transform the artists list column into a tidy format with one row per artist-track pairing.\nSteps: 1. Directory setup: - Check for data/mp03/; create it if missing using dir.create(). 2. Download logic: - If data/mp03/data.csv does not exist, call download.file(\"https://raw.githubusercontent.com/gabminamendez/spotify-data/master/data.csv\", destfile = \"data/mp03/data.csv\"). 3. Import data: - Use readr::read_csv(\"data/mp03/data.csv\") to read into a tibble. 4. Clean artists column: - Define clean_artist_string() as provided to strip list syntax. - Use tidyr::separate_longer_delim(artists, \",\") to expand each artist. - mutate(artist = clean_artist_string(artists)) %&gt;% select(-artists) to finalize.\n\n\nLoading required package: stringr\n\n\nLoading required package: readr\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nLoading required package: fs\n\n\nLoading required package: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nLoading required package: tidyr\n\n\nLoading required package: httr2\n\n\nWarning: package 'httr2' was built under R version 4.4.3\n\n\nLoading required package: rvest\n\n\n\nAttaching package: 'rvest'\n\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n\nLoading required package: purrr\n\n\nLoading required package: DT\n\n\nWarning: package 'DT' was built under R version 4.4.3\n\n\n# A tibble: 6 × 19\n  id      name  artists duration_ms release_date  year acousticness danceability\n  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 6KbQ3u… Sing… ['Carl…      158648 1928          1928        0.995        0.708\n2 6KuQTI… Fant… ['Robe…      282133 1928          1928        0.994        0.379\n3 6L63VW… Chap… ['Sewe…      104300 1928          1928        0.604        0.749\n4 6M94Fk… Beba… ['Fran…      180760 9/25/28       1928        0.995        0.781\n5 6N6tiF… Polo… ['Fréd…      687733 1928          1928        0.99         0.21 \n6 6NxAf7… Sche… ['Feli…      352600 1928          1928        0.995        0.424\n# ℹ 11 more variables: energy &lt;dbl&gt;, instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, speechiness &lt;dbl&gt;, tempo &lt;dbl&gt;, valence &lt;dbl&gt;, mode &lt;dbl&gt;,\n#   key &lt;dbl&gt;, popularity &lt;dbl&gt;, explicit &lt;dbl&gt;\n\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\nRows: 226,813\nColumns: 19\n$ id               &lt;chr&gt; \"6KbQ3uYMLKb5jDxLF7wYDD\", \"6KuQTIu1KoTTkLXKrwlLPV\", \"…\n$ name             &lt;chr&gt; \"Singende Bataillone 1. Teil\", \"Fantasiestücke, Op. 1…\n$ duration_ms      &lt;dbl&gt; 158648, 282133, 282133, 104300, 180760, 687733, 68773…\n$ release_date     &lt;chr&gt; \"1928\", \"1928\", \"1928\", \"1928\", \"9/25/28\", \"1928\", \"1…\n$ year             &lt;dbl&gt; 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,…\n$ acousticness     &lt;dbl&gt; 0.995, 0.994, 0.994, 0.604, 0.995, 0.990, 0.990, 0.99…\n$ danceability     &lt;dbl&gt; 0.708, 0.379, 0.379, 0.749, 0.781, 0.210, 0.210, 0.42…\n$ energy           &lt;dbl&gt; 0.1950, 0.0135, 0.0135, 0.2200, 0.1300, 0.2040, 0.204…\n$ instrumentalness &lt;dbl&gt; 0.563, 0.901, 0.901, 0.000, 0.887, 0.908, 0.908, 0.91…\n$ liveness         &lt;dbl&gt; 0.1510, 0.0763, 0.0763, 0.1190, 0.1110, 0.0980, 0.098…\n$ loudness         &lt;dbl&gt; -12.428, -28.454, -28.454, -19.924, -14.734, -16.829,…\n$ speechiness      &lt;dbl&gt; 0.0506, 0.0462, 0.0462, 0.9290, 0.0926, 0.0424, 0.042…\n$ tempo            &lt;dbl&gt; 118.469, 83.972, 83.972, 107.177, 108.003, 62.149, 62…\n$ valence          &lt;dbl&gt; 0.7790, 0.0767, 0.0767, 0.8800, 0.7200, 0.0693, 0.069…\n$ mode             &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,…\n$ key              &lt;dbl&gt; 10, 8, 8, 5, 1, 11, 11, 6, 6, 11, 11, 1, 9, 9, 9, 10,…\n$ popularity       &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ explicit         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ artist           &lt;chr&gt; \"Carl Woitschach\", \"Robert Schumann\", \"Vladimir Horow…\n\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\n\n\nTask 2: Playlist Dataset\nObjective: Download and load the million-playlist JSON files into R.\nSummary: Programmatically fetch all JSON files from the Spotify million playlist repository, store them in data/mp03/playlists/, and read each into R, returning a list of playlists.\nSteps: 1. Directory setup: - Ensure data/mp03/playlists/ exists. 2. List files remotely or define indices: - Use GitHub API or an index vector (e.g., 1:50) to generate file names data1.json through data50.json. 3. Download loop: - For each index, construct URL and local path. - If the local file is absent, call download.file() to fetch. 4. Import into R: - Use jsonlite::fromJSON() or ndjson::stream_in() for large files. - Collect into a list via purrr::map() or a manual loop. 5. Return: - Return the full list of playlist objects.\n\n\nLoading required package: jsonlite\n\n\nWarning: package 'jsonlite' was built under R version 4.4.3\n\n\n\nAttaching package: 'jsonlite'\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\n[1] already on disk; reading mpd.slice.0-999.json\n\n\n  ✓ added 16 playlists (total now 16)\n\n\nReached 16 playlists; stopping.\n\n\nDone! Loaded 16 playlists from 1 slices.\n\n\n[1] 16\n\n\n[1] already on disk; reading mpd.slice.0-999.json\n\n\n  ✓ added 16 playlists (total now 16)\n\n\nReached 16 playlists; stopping.\n\n\nDone! Loaded 16 playlists from 1 slices.\n\n\n[1] 16\n\n\nList of 11\n $ name         : chr \"Throwbacks\"\n $ collaborative: chr \"false\"\n $ pid          : int 0\n $ modified_at  : int 1493424000\n $ num_tracks   : int 52\n $ num_albums   : int 47\n $ num_followers: int 1\n $ tracks       :List of 52\n  ..$ :List of 8\n  .. ..$ pos        : int 0\n  .. ..$ artist_name: chr \"Missy Elliott\"\n  .. ..$ track_uri  : chr \"spotify:track:0UaMYEvWZi0ZqiDOoHU3YI\"\n  .. ..$ artist_uri : chr \"spotify:artist:2wIVse2owClT7go1WT98tk\"\n  .. ..$ track_name : chr \"Lose Control (feat. Ciara & Fat Man Scoop)\"\n  .. ..$ album_uri  : chr \"spotify:album:6vV5UrXcfyQD1wu4Qo2I9K\"\n  .. ..$ duration_ms: int 226863\n  .. ..$ album_name : chr \"The Cookbook\"\n  ..$ :List of 8\n  .. ..$ pos        : int 1\n  .. ..$ artist_name: chr \"Britney Spears\"\n  .. ..$ track_uri  : chr \"spotify:track:6I9VzXrHxO9rA9A5euc8Ak\"\n  .. ..$ artist_uri : chr \"spotify:artist:26dSoYclwsYLMAKD3tpOr4\"\n  .. ..$ track_name : chr \"Toxic\"\n  .. ..$ album_uri  : chr \"spotify:album:0z7pVBGOD7HCIB7S8eLkLI\"\n  .. ..$ duration_ms: int 198800\n  .. ..$ album_name : chr \"In The Zone\"\n  ..$ :List of 8\n  .. ..$ pos        : int 2\n  .. ..$ artist_name: chr \"Beyoncé\"\n  .. ..$ track_uri  : chr \"spotify:track:0WqIKmW4BTrj3eJFmnCKMv\"\n  .. ..$ artist_uri : chr \"spotify:artist:6vWDO969PvNqNYHIOW5v0m\"\n  .. ..$ track_name : chr \"Crazy In Love\"\n  .. ..$ album_uri  : chr \"spotify:album:25hVFAxTlDvXbx2X2QkUkE\"\n  .. ..$ duration_ms: int 235933\n  .. ..$ album_name : chr \"Dangerously In Love (Alben für die Ewigkeit)\"\n  ..$ :List of 8\n  .. ..$ pos        : int 3\n  .. ..$ artist_name: chr \"Justin Timberlake\"\n  .. ..$ track_uri  : chr \"spotify:track:1AWQoqb9bSvzTjaLralEkT\"\n  .. ..$ artist_uri : chr \"spotify:artist:31TPClRtHm23RisEBtV3X7\"\n  .. ..$ track_name : chr \"Rock Your Body\"\n  .. ..$ album_uri  : chr \"spotify:album:6QPkyl04rXwTGlGlcYaRoW\"\n  .. ..$ duration_ms: int 267266\n  .. ..$ album_name : chr \"Justified\"\n  ..$ :List of 8\n  .. ..$ pos        : int 4\n  .. ..$ artist_name: chr \"Shaggy\"\n  .. ..$ track_uri  : chr \"spotify:track:1lzr43nnXAijIGYnCT8M8H\"\n  .. ..$ artist_uri : chr \"spotify:artist:5EvFsr3kj42KNv97ZEnqij\"\n  .. ..$ track_name : chr \"It Wasn't Me\"\n  .. ..$ album_uri  : chr \"spotify:album:6NmFmPX56pcLBOFMhIiKvF\"\n  .. ..$ duration_ms: int 227600\n  .. ..$ album_name : chr \"Hot Shot\"\n  ..$ :List of 8\n  .. ..$ pos        : int 5\n  .. ..$ artist_name: chr \"Usher\"\n  .. ..$ track_uri  : chr \"spotify:track:0XUfyU2QviPAs6bxSpXYG4\"\n  .. ..$ artist_uri : chr \"spotify:artist:23zg3TcAtWQy7J6upgbUnj\"\n  .. ..$ track_name : chr \"Yeah!\"\n  .. ..$ album_uri  : chr \"spotify:album:0vO0b1AvY49CPQyVisJLj0\"\n  .. ..$ duration_ms: int 250373\n  .. ..$ album_name : chr \"Confessions\"\n  ..$ :List of 8\n  .. ..$ pos        : int 6\n  .. ..$ artist_name: chr \"Usher\"\n  .. ..$ track_uri  : chr \"spotify:track:68vgtRHr7iZHpzGpon6Jlo\"\n  .. ..$ artist_uri : chr \"spotify:artist:23zg3TcAtWQy7J6upgbUnj\"\n  .. ..$ track_name : chr \"My Boo\"\n  .. ..$ album_uri  : chr \"spotify:album:1RM6MGv6bcl6NrAG8PGoZk\"\n  .. ..$ duration_ms: int 223440\n  .. ..$ album_name : chr \"Confessions\"\n  ..$ :List of 8\n  .. ..$ pos        : int 7\n  .. ..$ artist_name: chr \"The Pussycat Dolls\"\n  .. ..$ track_uri  : chr \"spotify:track:3BxWKCI06eQ5Od8TY2JBeA\"\n  .. ..$ artist_uri : chr \"spotify:artist:6wPhSqRtPu1UhRCDX5yaDJ\"\n  .. ..$ track_name : chr \"Buttons\"\n  .. ..$ album_uri  : chr \"spotify:album:5x8e8UcCeOgrOzSnDGuPye\"\n  .. ..$ duration_ms: int 225560\n  .. ..$ album_name : chr \"PCD\"\n  ..$ :List of 8\n  .. ..$ pos        : int 8\n  .. ..$ artist_name: chr \"Destiny's Child\"\n  .. ..$ track_uri  : chr \"spotify:track:7H6ev70Weq6DdpZyyTmUXk\"\n  .. ..$ artist_uri : chr \"spotify:artist:1Y8cdNmUJH7yBTd9yOvr5i\"\n  .. ..$ track_name : chr \"Say My Name\"\n  .. ..$ album_uri  : chr \"spotify:album:283NWqNsCA9GwVHrJk59CG\"\n  .. ..$ duration_ms: int 271333\n  .. ..$ album_name : chr \"The Writing's On The Wall\"\n  ..$ :List of 8\n  .. ..$ pos        : int 9\n  .. ..$ artist_name: chr \"OutKast\"\n  .. ..$ track_uri  : chr \"spotify:track:2PpruBYCo4H7WOBJ7Q2EwM\"\n  .. ..$ artist_uri : chr \"spotify:artist:1G9G7WwrXka3Z1r7aIDjI7\"\n  .. ..$ track_name : chr \"Hey Ya! - Radio Mix / Club Mix\"\n  .. ..$ album_uri  : chr \"spotify:album:1UsmQ3bpJTyK6ygoOOjG1r\"\n  .. ..$ duration_ms: int 235213\n  .. ..$ album_name : chr \"Speakerboxxx/The Love Below\"\n  ..$ :List of 8\n  .. ..$ pos        : int 10\n  .. ..$ artist_name: chr \"Nelly Furtado\"\n  .. ..$ track_uri  : chr \"spotify:track:2gam98EZKrF9XuOkU13ApN\"\n  .. ..$ artist_uri : chr \"spotify:artist:2jw70GZXlAI8QzWeY2bgRc\"\n  .. ..$ track_name : chr \"Promiscuous\"\n  .. ..$ album_uri  : chr \"spotify:album:2yboV2QBcVGEhcRlYuPpDT\"\n  .. ..$ duration_ms: int 242293\n  .. ..$ album_name : chr \"Loose\"\n  ..$ :List of 8\n  .. ..$ pos        : int 11\n  .. ..$ artist_name: chr \"Jesse McCartney\"\n  .. ..$ track_uri  : chr \"spotify:track:4Y45aqo9QMa57rDsAJv40A\"\n  .. ..$ artist_uri : chr \"spotify:artist:2Hjj68yyUPiC0HKEOigcEp\"\n  .. ..$ track_name : chr \"Right Where You Want Me - Radio Edit Version\"\n  .. ..$ album_uri  : chr \"spotify:album:6022khQj4Fsvvse8f3A4lF\"\n  .. ..$ duration_ms: int 211693\n  .. ..$ album_name : chr \"Right Where You Want Me\"\n  ..$ :List of 8\n  .. ..$ pos        : int 12\n  .. ..$ artist_name: chr \"Jesse McCartney\"\n  .. ..$ track_uri  : chr \"spotify:track:1HwpWwa6bnqqRhK8agG4RS\"\n  .. ..$ artist_uri : chr \"spotify:artist:2Hjj68yyUPiC0HKEOigcEp\"\n  .. ..$ track_name : chr \"Beautiful Soul\"\n  .. ..$ album_uri  : chr \"spotify:album:2gidE8vgVOkYufANjuvj3S\"\n  .. ..$ duration_ms: int 214226\n  .. ..$ album_name : chr \"Beautiful Soul\"\n  ..$ :List of 8\n  .. ..$ pos        : int 13\n  .. ..$ artist_name: chr \"Jesse McCartney\"\n  .. ..$ track_uri  : chr \"spotify:track:20ORwCJusz4KS2PbTPVNKo\"\n  .. ..$ artist_uri : chr \"spotify:artist:2Hjj68yyUPiC0HKEOigcEp\"\n  .. ..$ track_name : chr \"Leavin'\"\n  .. ..$ album_uri  : chr \"spotify:album:2tDCfKFy2YW9N0IwNSRdOJ\"\n  .. ..$ duration_ms: int 216880\n  .. ..$ album_name : chr \"Departure - Recharged\"\n  ..$ :List of 8\n  .. ..$ pos        : int 14\n  .. ..$ artist_name: chr \"Cassie\"\n  .. ..$ track_uri  : chr \"spotify:track:7k6IzwMGpxnRghE7YosnXT\"\n  .. ..$ artist_uri : chr \"spotify:artist:27FGXRNruFoOdf1vP8dqcH\"\n  .. ..$ track_name : chr \"Me & U\"\n  .. ..$ album_uri  : chr \"spotify:album:0j1qzjaJmsF1FkcICf3hRu\"\n  .. ..$ duration_ms: int 192213\n  .. ..$ album_name : chr \"Cassie\"\n  ..$ :List of 8\n  .. ..$ pos        : int 15\n  .. ..$ artist_name: chr \"Omarion\"\n  .. ..$ track_uri  : chr \"spotify:track:1Bv0Yl01xBDZD4OQP93fyl\"\n  .. ..$ artist_uri : chr \"spotify:artist:0f5nVCcR06GX8Qikz0COtT\"\n  .. ..$ track_name : chr \"Ice Box\"\n  .. ..$ album_uri  : chr \"spotify:album:4cVVEOXyUaWo7vlDWIkKsI\"\n  .. ..$ duration_ms: int 256426\n  .. ..$ album_name : chr \"21\"\n  ..$ :List of 8\n  .. ..$ pos        : int 16\n  .. ..$ artist_name: chr \"Avril Lavigne\"\n  .. ..$ track_uri  : chr \"spotify:track:4omisSlTk6Dsq2iQD7MA07\"\n  .. ..$ artist_uri : chr \"spotify:artist:0p4nmQO2msCgU4IF37Wi3j\"\n  .. ..$ track_name : chr \"Sk8er Boi\"\n  .. ..$ album_uri  : chr \"spotify:album:7h6XeTzy0SRXDrFJeA9gO7\"\n  .. ..$ duration_ms: int 204000\n  .. ..$ album_name : chr \"Let Go\"\n  ..$ :List of 8\n  .. ..$ pos        : int 17\n  .. ..$ artist_name: chr \"Chris Brown\"\n  .. ..$ track_uri  : chr \"spotify:track:7xYnUQigPoIDAMPVK79NEq\"\n  .. ..$ artist_uri : chr \"spotify:artist:7bXgB6jMjp9ATFy66eO08Z\"\n  .. ..$ track_name : chr \"Run It!\"\n  .. ..$ album_uri  : chr \"spotify:album:49gaz5rhWWgqCw61M9700v\"\n  .. ..$ duration_ms: int 229866\n  .. ..$ album_name : chr \"Chris Brown\"\n  ..$ :List of 8\n  .. ..$ pos        : int 18\n  .. ..$ artist_name: chr \"Beyoncé\"\n  .. ..$ track_uri  : chr \"spotify:track:6d8A5sAx9TfdeseDvfWNHd\"\n  .. ..$ artist_uri : chr \"spotify:artist:6vWDO969PvNqNYHIOW5v0m\"\n  .. ..$ track_name : chr \"Check On It - feat. Bun B and Slim Thug\"\n  .. ..$ album_uri  : chr \"spotify:album:3MJHoQUI828kmB6IpjejbW\"\n  .. ..$ duration_ms: int 210453\n  .. ..$ album_name : chr \"B'Day\"\n  ..$ :List of 8\n  .. ..$ pos        : int 19\n  .. ..$ artist_name: chr \"Destiny's Child\"\n  .. ..$ track_uri  : chr \"spotify:track:4pmc2AxSEq6g7hPVlJCPyP\"\n  .. ..$ artist_uri : chr \"spotify:artist:1Y8cdNmUJH7yBTd9yOvr5i\"\n  .. ..$ track_name : chr \"Jumpin', Jumpin'\"\n  .. ..$ album_uri  : chr \"spotify:album:283NWqNsCA9GwVHrJk59CG\"\n  .. ..$ duration_ms: int 230200\n  .. ..$ album_name : chr \"The Writing's On The Wall\"\n  ..$ :List of 8\n  .. ..$ pos        : int 20\n  .. ..$ artist_name: chr \"Sheryl Crow\"\n  .. ..$ track_uri  : chr \"spotify:track:215JYyyUnrJ98NK3KEwu6d\"\n  .. ..$ artist_uri : chr \"spotify:artist:4TKTii6gnOnUXQHyuo9JaD\"\n  .. ..$ track_name : chr \"Soak Up The Sun\"\n  .. ..$ album_uri  : chr \"spotify:album:5NYcTXrRZHxNyRKVOd0vs1\"\n  .. ..$ duration_ms: int 292306\n  .. ..$ album_name : chr \"C'Mon C'Mon\"\n  ..$ :List of 8\n  .. ..$ pos        : int 21\n  .. ..$ artist_name: chr \"The Black Eyed Peas\"\n  .. ..$ track_uri  : chr \"spotify:track:0uqPG793dkDDN7sCUJJIVC\"\n  .. ..$ artist_uri : chr \"spotify:artist:1yxSLGMDHlW21z4YXirZDS\"\n  .. ..$ track_name : chr \"Where Is The Love?\"\n  .. ..$ album_uri  : chr \"spotify:album:1bNyYpkDRovmErm4QeDrpJ\"\n  .. ..$ duration_ms: int 272533\n  .. ..$ album_name : chr \"Elephunk\"\n  ..$ :List of 8\n  .. ..$ pos        : int 22\n  .. ..$ artist_name: chr \"Bowling For Soup\"\n  .. ..$ track_uri  : chr \"spotify:track:19Js5ypV6JKn4DMExHQbGc\"\n  .. ..$ artist_uri : chr \"spotify:artist:5ND0mGcL9SKSjWIjPd0xIb\"\n  .. ..$ track_name : chr \"Stacy's Mom\"\n  .. ..$ album_uri  : chr \"spotify:album:3Q7xpHmP8k3HryE0LQdIk0\"\n  .. ..$ duration_ms: int 193042\n  .. ..$ album_name : chr \"I've Never Done Anything Like This\"\n  ..$ :List of 8\n  .. ..$ pos        : int 23\n  .. ..$ artist_name: chr \"The Click Five\"\n  .. ..$ track_uri  : chr \"spotify:track:1JURww012QnWAw0zZXi6Aa\"\n  .. ..$ artist_uri : chr \"spotify:artist:01lz5VBfkMFDteSA9pKJuP\"\n  .. ..$ track_name : chr \"Just The Girl\"\n  .. ..$ album_uri  : chr \"spotify:album:7gZilZGYr8M7UwEeYvdAKZ\"\n  .. ..$ duration_ms: int 234146\n  .. ..$ album_name : chr \"Greetings From Imrie House\"\n  ..$ :List of 8\n  .. ..$ pos        : int 24\n  .. ..$ artist_name: chr \"Chris Brown\"\n  .. ..$ track_uri  : chr \"spotify:track:7DFnq8FYhHMCylykf6ZCxA\"\n  .. ..$ artist_uri : chr \"spotify:artist:7bXgB6jMjp9ATFy66eO08Z\"\n  .. ..$ track_name : chr \"Yo (Excuse Me Miss)\"\n  .. ..$ album_uri  : chr \"spotify:album:49gaz5rhWWgqCw61M9700v\"\n  .. ..$ duration_ms: int 229040\n  .. ..$ album_name : chr \"Chris Brown\"\n  ..$ :List of 8\n  .. ..$ pos        : int 25\n  .. ..$ artist_name: chr \"Jonas Brothers\"\n  .. ..$ track_uri  : chr \"spotify:track:1TfAhjzRBWzYZ8IdUV3igl\"\n  .. ..$ artist_uri : chr \"spotify:artist:7gOdHgIoIKoe4i9Tta6qdD\"\n  .. ..$ track_name : chr \"Year 3000\"\n  .. ..$ album_uri  : chr \"spotify:album:20RAjvZ9LX2FDuDU8RDuIl\"\n  .. ..$ duration_ms: int 201960\n  .. ..$ album_name : chr \"Jonas Brothers\"\n  ..$ :List of 8\n  .. ..$ pos        : int 26\n  .. ..$ artist_name: chr \"Lil Mama\"\n  .. ..$ track_uri  : chr \"spotify:track:1Y4ZdPOOgCUhBcKZOrUFiS\"\n  .. ..$ artist_uri : chr \"spotify:artist:5qK5bOC6wLtuLhG5KvU17c\"\n  .. ..$ track_name : chr \"Lip Gloss\"\n  .. ..$ album_uri  : chr \"spotify:album:3vgVsm9GY3i39fZ7b1sqV5\"\n  .. ..$ duration_ms: int 219773\n  .. ..$ album_name : chr \"Lip Gloss\"\n  ..$ :List of 8\n  .. ..$ pos        : int 27\n  .. ..$ artist_name: chr \"Cascada\"\n  .. ..$ track_uri  : chr \"spotify:track:6MjljecHzHelUDismyKkba\"\n  .. ..$ artist_uri : chr \"spotify:artist:0N0d3kjwdY2h7UVuTdJGfp\"\n  .. ..$ track_name : chr \"Everytime We Touch - Radio Edit\"\n  .. ..$ album_uri  : chr \"spotify:album:5DvuKZTzEKjm0oUuhP237C\"\n  .. ..$ duration_ms: int 199120\n  .. ..$ album_name : chr \"Everytime We Touch\"\n  ..$ :List of 8\n  .. ..$ pos        : int 28\n  .. ..$ artist_name: chr \"Jason Derulo\"\n  .. ..$ track_uri  : chr \"spotify:track:67T6l4q3zVjC5nZZPXByU8\"\n  .. ..$ artist_uri : chr \"spotify:artist:07YZf4WDAMNwqr4jfgOZ8y\"\n  .. ..$ track_name : chr \"Whatcha Say\"\n  .. ..$ album_uri  : chr \"spotify:album:0aVJmVAeEx78nAA1rAKYf7\"\n  .. ..$ duration_ms: int 221253\n  .. ..$ album_name : chr \"Jason Derulo\"\n  ..$ :List of 8\n  .. ..$ pos        : int 29\n  .. ..$ artist_name: chr \"Ne-Yo\"\n  .. ..$ track_uri  : chr \"spotify:track:34ceTg8ChN5HjrqiIYCn9Q\"\n  .. ..$ artist_uri : chr \"spotify:artist:21E3waRsmPlU7jZsS13rcj\"\n  .. ..$ track_name : chr \"Miss Independent\"\n  .. ..$ album_uri  : chr \"spotify:album:6dTn9vJSxVTIGm4Cu5dH4x\"\n  .. ..$ duration_ms: int 232000\n  .. ..$ album_name : chr \"Year Of The Gentleman\"\n  ..$ :List of 8\n  .. ..$ pos        : int 30\n  .. ..$ artist_name: chr \"Miley Cyrus\"\n  .. ..$ track_uri  : chr \"spotify:track:5Q0Nhxo0l2bP3pNjpGJwV1\"\n  .. ..$ artist_uri : chr \"spotify:artist:5YGY8feqx7naU7z4HrwZM6\"\n  .. ..$ track_name : chr \"Party In The U.S.A.\"\n  .. ..$ album_uri  : chr \"spotify:album:64aKkqxc3Ur2LYIKeS5osS\"\n  .. ..$ duration_ms: int 202066\n  .. ..$ album_name : chr \"The Time Of Our Lives\"\n  ..$ :List of 8\n  .. ..$ pos        : int 31\n  .. ..$ artist_name: chr \"Boys Like Girls\"\n  .. ..$ track_uri  : chr \"spotify:track:6GIrIt2M39wEGwjCQjGChX\"\n  .. ..$ artist_uri : chr \"spotify:artist:0vWCyXMrrvMlCcepuOJaGI\"\n  .. ..$ track_name : chr \"The Great Escape\"\n  .. ..$ album_uri  : chr \"spotify:album:4WqgusSAgXkrjbXzqdBY68\"\n  .. ..$ duration_ms: int 206520\n  .. ..$ album_name : chr \"Boys Like Girls\"\n  ..$ :List of 8\n  .. ..$ pos        : int 32\n  .. ..$ artist_name: chr \"Iyaz\"\n  .. ..$ track_uri  : chr \"spotify:track:4E5P1XyAFtrjpiIxkydly4\"\n  .. ..$ artist_uri : chr \"spotify:artist:5tKXB9uuebKE34yowVaU3C\"\n  .. ..$ track_name : chr \"Replay\"\n  .. ..$ album_uri  : chr \"spotify:album:44hyrGuZKAvITbmrlhryf8\"\n  .. ..$ duration_ms: int 182306\n  .. ..$ album_name : chr \"Replay\"\n  ..$ :List of 8\n  .. ..$ pos        : int 33\n  .. ..$ artist_name: chr \"Chris Brown\"\n  .. ..$ track_uri  : chr \"spotify:track:3H1LCvO3fVsK2HPguhbml0\"\n  .. ..$ artist_uri : chr \"spotify:artist:7bXgB6jMjp9ATFy66eO08Z\"\n  .. ..$ track_name : chr \"Forever\"\n  .. ..$ album_uri  : chr \"spotify:album:1UtE4zAlSE2TlKmTFgrTg5\"\n  .. ..$ duration_ms: int 277106\n  .. ..$ album_name : chr \"Exclusive - The Forever Edition\"\n  ..$ :List of 8\n  .. ..$ pos        : int 34\n  .. ..$ artist_name: chr \"Kesha\"\n  .. ..$ track_uri  : chr \"spotify:track:3uoQULcUWfnt6nc6J7Vgai\"\n  .. ..$ artist_uri : chr \"spotify:artist:6LqNN22kT3074XbTVUrhzX\"\n  .. ..$ track_name : chr \"Your Love Is My Drug\"\n  .. ..$ album_uri  : chr \"spotify:album:5peRwC6pQh8eaoIPtvmmOB\"\n  .. ..$ duration_ms: int 187133\n  .. ..$ album_name : chr \"Animal\"\n  ..$ :List of 8\n  .. ..$ pos        : int 35\n  .. ..$ artist_name: chr \"Ne-Yo\"\n  .. ..$ track_uri  : chr \"spotify:track:2nbClS09zsIAqNkshg6jnp\"\n  .. ..$ artist_uri : chr \"spotify:artist:21E3waRsmPlU7jZsS13rcj\"\n  .. ..$ track_name : chr \"Closer\"\n  .. ..$ album_uri  : chr \"spotify:album:1nv3KEXZPmcwOXMoLTs1vn\"\n  .. ..$ duration_ms: int 234360\n  .. ..$ album_name : chr \"Year Of The Gentleman\"\n  ..$ :List of 8\n  .. ..$ pos        : int 36\n  .. ..$ artist_name: chr \"Justin Bieber\"\n  .. ..$ track_uri  : chr \"spotify:track:69ghzc538EQSVon2Gm3wrr\"\n  .. ..$ artist_uri : chr \"spotify:artist:1uNFoZAHBGtllmzznpCI3s\"\n  .. ..$ track_name : chr \"One Less Lonely Girl\"\n  .. ..$ album_uri  : chr \"spotify:album:1rG5TDs3jYh6OU753I54CI\"\n  .. ..$ duration_ms: int 229106\n  .. ..$ album_name : chr \"My World\"\n  ..$ :List of 8\n  .. ..$ pos        : int 37\n  .. ..$ artist_name: chr \"M.I.A.\"\n  .. ..$ track_uri  : chr \"spotify:track:1kusepF3AacIEtUTYrw4GV\"\n  .. ..$ artist_uri : chr \"spotify:artist:0QJIPDAEDILuo8AIq3pMuU\"\n  .. ..$ track_name : chr \"Paper Planes\"\n  .. ..$ album_uri  : chr \"spotify:album:1Lymt1abGCr3J06bbnmWca\"\n  .. ..$ duration_ms: int 203760\n  .. ..$ album_name : chr \"Kala\"\n  ..$ :List of 8\n  .. ..$ pos        : int 38\n  .. ..$ artist_name: chr \"The Killers\"\n  .. ..$ track_uri  : chr \"spotify:track:7oK9VyNzrYvRFo7nQEYkWN\"\n  .. ..$ artist_uri : chr \"spotify:artist:0C0XlULifJtAgn6ZNCW2eu\"\n  .. ..$ track_name : chr \"Mr. Brightside\"\n  .. ..$ album_uri  : chr \"spotify:album:4undIeGmofnAYKhnDclN1w\"\n  .. ..$ duration_ms: int 222586\n  .. ..$ album_name : chr \"Hot Fuss\"\n  ..$ :List of 8\n  .. ..$ pos        : int 39\n  .. ..$ artist_name: chr \"blink-182\"\n  .. ..$ track_uri  : chr \"spotify:track:12qZHAeOyTf93YAWvGDTat\"\n  .. ..$ artist_uri : chr \"spotify:artist:6FBDaR13swtiWwGhX1WQsP\"\n  .. ..$ track_name : chr \"All The Small Things\"\n  .. ..$ album_uri  : chr \"spotify:album:1fF8kYX49s5Ufv4XEY5sjW\"\n  .. ..$ duration_ms: int 168000\n  .. ..$ album_name : chr \"Enema Of The State\"\n  ..$ :List of 8\n  .. ..$ pos        : int 40\n  .. ..$ artist_name: chr \"The Pussycat Dolls\"\n  .. ..$ track_uri  : chr \"spotify:track:2jFlMILIQzs7lSFudG9lbo\"\n  .. ..$ artist_uri : chr \"spotify:artist:6wPhSqRtPu1UhRCDX5yaDJ\"\n  .. ..$ track_name : chr \"Beep\"\n  .. ..$ album_uri  : chr \"spotify:album:0ylxpXE00fVxh6d60tevT8\"\n  .. ..$ duration_ms: int 229360\n  .. ..$ album_name : chr \"PCD\"\n  ..$ :List of 8\n  .. ..$ pos        : int 41\n  .. ..$ artist_name: chr \"Justin Bieber\"\n  .. ..$ track_uri  : chr \"spotify:track:4I2GqMe7L2ccMpUbnDzYLH\"\n  .. ..$ artist_uri : chr \"spotify:artist:1uNFoZAHBGtllmzznpCI3s\"\n  .. ..$ track_name : chr \"Somebody To Love\"\n  .. ..$ album_uri  : chr \"spotify:album:6gdLfnf2vdNlMTyhJHaDLs\"\n  .. ..$ duration_ms: int 220920\n  .. ..$ album_name : chr \"My Worlds\"\n  ..$ :List of 8\n  .. ..$ pos        : int 42\n  .. ..$ artist_name: chr \"The All-American Rejects\"\n  .. ..$ track_uri  : chr \"spotify:track:5lDriBxJd22IhOH9zTcFrV\"\n  .. ..$ artist_uri : chr \"spotify:artist:3vAaWhdBR38Q02ohXqaNHT\"\n  .. ..$ track_name : chr \"Dirty Little Secret\"\n  .. ..$ album_uri  : chr \"spotify:album:3PWEGZ6CYvXRnr0JCECsDe\"\n  .. ..$ duration_ms: int 193653\n  .. ..$ album_name : chr \"Move Along\"\n  ..$ :List of 8\n  .. ..$ pos        : int 43\n  .. ..$ artist_name: chr \"Justin Bieber\"\n  .. ..$ track_uri  : chr \"spotify:track:2eJ8ij1T3cNUKiGdcUvKhy\"\n  .. ..$ artist_uri : chr \"spotify:artist:1uNFoZAHBGtllmzznpCI3s\"\n  .. ..$ track_name : chr \"Baby\"\n  .. ..$ album_uri  : chr \"spotify:album:6gdLfnf2vdNlMTyhJHaDLs\"\n  .. ..$ duration_ms: int 213973\n  .. ..$ album_name : chr \"My Worlds\"\n  ..$ :List of 8\n  .. ..$ pos        : int 44\n  .. ..$ artist_name: chr \"Vanessa Carlton\"\n  .. ..$ track_uri  : chr \"spotify:track:5y69gQtK33qxb8a24ACkCy\"\n  .. ..$ artist_uri : chr \"spotify:artist:5ILrArfIV0tMURcHJN8Q07\"\n  .. ..$ track_name : chr \"A Thousand Miles\"\n  .. ..$ album_uri  : chr \"spotify:album:7D6BFTArx2ajtkKRVXIKO2\"\n  .. ..$ duration_ms: int 237493\n  .. ..$ album_name : chr \"Be Not Nobody\"\n  ..$ :List of 8\n  .. ..$ pos        : int 45\n  .. ..$ artist_name: chr \"Cris Cab\"\n  .. ..$ track_uri  : chr \"spotify:track:1X5WGCrUMuwRFuYU1eAo2I\"\n  .. ..$ artist_uri : chr \"spotify:artist:7vWBZm3sQ8yQvfV4nXxHXK\"\n  .. ..$ track_name : chr \"Livin on Sunday\"\n  .. ..$ album_uri  : chr \"spotify:album:2kNznk4KDkYXifzOAUDoXN\"\n  .. ..$ duration_ms: int 201230\n  .. ..$ album_name : chr \"Red Road\"\n  ..$ :List of 8\n  .. ..$ pos        : int 46\n  .. ..$ artist_name: chr \"Miley Cyrus\"\n  .. ..$ track_uri  : chr \"spotify:track:3utIAb67sOu0QHxBE88P1M\"\n  .. ..$ artist_uri : chr \"spotify:artist:5YGY8feqx7naU7z4HrwZM6\"\n  .. ..$ track_name : chr \"See You Again\"\n  .. ..$ album_uri  : chr \"spotify:album:6SkirMQoL4QhnXOM5MH5El\"\n  .. ..$ duration_ms: int 190453\n  .. ..$ album_name : chr \"See You Again\"\n  ..$ :List of 8\n  .. ..$ pos        : int 47\n  .. ..$ artist_name: chr \"Jesse McCartney\"\n  .. ..$ track_uri  : chr \"spotify:track:3jkdQNkDTxxXtjSO4l0o1H\"\n  .. ..$ artist_uri : chr \"spotify:artist:2Hjj68yyUPiC0HKEOigcEp\"\n  .. ..$ track_name : chr \"How Do You Sleep? - Featuring Ludacris\"\n  .. ..$ album_uri  : chr \"spotify:album:2tDCfKFy2YW9N0IwNSRdOJ\"\n  .. ..$ duration_ms: int 208333\n  .. ..$ album_name : chr \"Departure - Recharged\"\n  ..$ :List of 8\n  .. ..$ pos        : int 48\n  .. ..$ artist_name: chr \"Demi Lovato\"\n  .. ..$ track_uri  : chr \"spotify:track:5c1sfI6wIQEsSUw0xrkFdl\"\n  .. ..$ artist_uri : chr \"spotify:artist:6S2OmqARrzebs0tKUEyXyp\"\n  .. ..$ track_name : chr \"This Is Me\"\n  .. ..$ album_uri  : chr \"spotify:album:6vykWEBzBfEKYJxEFR1AQl\"\n  .. ..$ duration_ms: int 189186\n  .. ..$ album_name : chr \"Camp Rock Original Soundtrack\"\n  ..$ :List of 8\n  .. ..$ pos        : int 49\n  .. ..$ artist_name: chr \"Avril Lavigne\"\n  .. ..$ track_uri  : chr \"spotify:track:6sqNctd7MlJoKDOxPVCAvU\"\n  .. ..$ artist_uri : chr \"spotify:artist:0p4nmQO2msCgU4IF37Wi3j\"\n  .. ..$ track_name : chr \"My Happy Ending\"\n  .. ..$ album_uri  : chr \"spotify:album:7851Vsjv3apS52sXUik6iF\"\n  .. ..$ duration_ms: int 242413\n  .. ..$ album_name : chr \"Under My Skin\"\n  ..$ :List of 8\n  .. ..$ pos        : int 50\n  .. ..$ artist_name: chr \"We The Kings\"\n  .. ..$ track_uri  : chr \"spotify:track:1b7vg5T9YKR3NNqXfBYRF7\"\n  .. ..$ artist_uri : chr \"spotify:artist:3ao3jf5d70Tf4fPh2bnXVl\"\n  .. ..$ track_name : chr \"Check Yes Juliet\"\n  .. ..$ album_uri  : chr \"spotify:album:2F1hfUOuMnOxtSfrktL8VX\"\n  .. ..$ duration_ms: int 220133\n  .. ..$ album_name : chr \"We The Kings\"\n  ..$ :List of 8\n  .. ..$ pos        : int 51\n  .. ..$ artist_name: chr \"Boys Like Girls\"\n  .. ..$ track_uri  : chr \"spotify:track:6GIrIt2M39wEGwjCQjGChX\"\n  .. ..$ artist_uri : chr \"spotify:artist:0vWCyXMrrvMlCcepuOJaGI\"\n  .. ..$ track_name : chr \"The Great Escape\"\n  .. ..$ album_uri  : chr \"spotify:album:4WqgusSAgXkrjbXzqdBY68\"\n  .. ..$ duration_ms: int 206520\n  .. ..$ album_name : chr \"Boys Like Girls\"\n $ num_edits    : int 6\n $ duration_ms  : int 11532414\n $ num_artists  : int 37\n\n\n [1] \"name\"          \"collaborative\" \"pid\"           \"modified_at\"  \n [5] \"num_tracks\"    \"num_albums\"    \"num_followers\" \"tracks\"       \n [9] \"num_edits\"     \"duration_ms\"   \"num_artists\"  \n\n\n[1] \"pos\"         \"artist_name\" \"track_uri\"   \"artist_uri\"  \"track_name\" \n[6] \"album_uri\"   \"duration_ms\" \"album_name\" \n\n\n\n\nTask 3: Cleaning Playlist Data\nObjective: Convert hierarchical playlist list into a flat data frame. Summary: Convert nested playlist metadata and tracks into a single tibble with one row per track-playlist combination, cleaning Spotify ID prefixes along the way.\nSteps: 1. Iterate playlists: - Use purrr::map_df() over the list returned from Task 2. 2. Extract metadata: - For each playlist, pull name, id, followers.total, and track position. 3. Unnest tracks: - Use tidyr::unnest_longer() on the tracks list-column to expand tracks. 4. Extract track details: - For each track record, extract track.name, track.id, track.artists, album.name, album.id, duration_ms. 5. Clean IDs: - Apply strip_spotify_prefix() to track.id, album.id, and artist IDs. 6. Select & rename: - Build final columns: playlist_name, playlist_id, playlist_position, playlist_followers, artist_name, artist_id, track_name, track_id, album_name, album_id, duration.\n\n\nRows: 852\nColumns: 11\n$ playlist_name      &lt;chr&gt; \"Throwbacks\", \"Throwbacks\", \"Throwbacks\", \"Throwbac…\n$ playlist_id        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ playlist_position  &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ playlist_followers &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ artist_name        &lt;chr&gt; \"Missy Elliott\", \"Britney Spears\", \"Beyoncé\", \"Just…\n$ artist_id          &lt;chr&gt; \"2wIVse2owClT7go1WT98tk\", \"26dSoYclwsYLMAKD3tpOr4\",…\n$ track_name         &lt;chr&gt; \"Lose Control (feat. Ciara & Fat Man Scoop)\", \"Toxi…\n$ track_id           &lt;chr&gt; \"0UaMYEvWZi0ZqiDOoHU3YI\", \"6I9VzXrHxO9rA9A5euc8Ak\",…\n$ album_name         &lt;chr&gt; \"The Cookbook\", \"In The Zone\", \"Dangerously In Love…\n$ album_id           &lt;chr&gt; \"6vV5UrXcfyQD1wu4Qo2I9K\", \"0z7pVBGOD7HCIB7S8eLkLI\",…\n$ duration           &lt;int&gt; 226863, 198800, 235933, 267266, 227600, 250373, 223…\n\n\n\n\n\n\n\n\nTask 4: Initial Exploration\nObjective: Compute summary statistics about track and playlist coverage.\nSummary: Assess how many unique tracks and artists appear, identify top tracks, and examine playlist-level metrics like average track length and follower counts.\nSteps: 1. Distinct counts: - n_distinct(playlists_df$track_id) and n_distinct(playlists_df$artist_id). 2. Top 5 tracks overall: - playlists_df |&gt; count(track_name, sort = TRUE) |&gt; slice_head(5). 3. Tracks missing from song data: - anti_join(playlists_df, songs_df, by = \"track_id\") |&gt; count(track_name, sort = TRUE) |&gt; slice_head(1). 4. Most danceable track appearances: - Identify songs_df |&gt; filter(danceability == max(danceability)), then inner_join() to count playlist occurrences. 5. Playlist with longest average duration: - playlists_df |&gt; group_by(playlist_name) |&gt; summarize(avg_duration = mean(duration)) |&gt; arrange(desc(avg_duration)) |&gt; slice_head(1). 6. Most followed playlist: - playlists_df |&gt; group_by(playlist_name) |&gt; summarize(followers = max(playlist_followers)) |&gt; arrange(desc(followers)) |&gt; slice_head(1).\n\n\nDistinct tracks:  829 \n Distinct artists: 533 \n\n\nTop 5 tracks by frequency in playlists:\n\n\n# A tibble: 5 × 3\n  track_id               track_name                               n\n  &lt;chr&gt;                  &lt;chr&gt;                                &lt;int&gt;\n1 3Z9PJ6xiEGmcqo2hESEB5n Bitter Sweet Symphony                    3\n2 085XpQzAKm4nAfcfRp2get Get Free (feat. Amber Coffman)           2\n3 0XUfyU2QviPAs6bxSpXYG4 Yeah!                                    2\n4 0oIsNC7YcF48ozlsBacKRY Don't Let Me Down (feat. Cat Martin)     2\n5 0qg7vnrsBfsDCikGxyWzSX Organ Donor                              2\n\n\nMost‐popular track not in song‐characteristics:\n\n\n# A tibble: 1 × 3\n  track_id               track_name                n\n  &lt;chr&gt;                  &lt;chr&gt;                 &lt;int&gt;\n1 3Z9PJ6xiEGmcqo2hESEB5n Bitter Sweet Symphony     3\n\n\nMost danceable track:\n\n\n# A tibble: 1 × 3\n  track_id               track_name        danceability\n  &lt;chr&gt;                  &lt;chr&gt;                    &lt;dbl&gt;\n1 5YIF6HSOtHN9HdcE5IPzMe Funky Cold Medina        0.988\n\n\nIt appears in 0 playlists.\n\n\nPlaylist with longest average duration:\n\n\n# A tibble: 1 × 3\n  playlist_name    playlist_id avg_duration\n  &lt;chr&gt;                  &lt;int&gt;        &lt;dbl&gt;\n1 Awesome Playlist           1      298884.\n\n\nMost‐followed playlist:\n\n\n# A tibble: 1 × 3\n  playlist_name playlist_id playlist_followers\n  &lt;chr&gt;               &lt;int&gt;              &lt;int&gt;\n1 90s                     4                  2\n\n\n\n\nTask 5: Visualization\nObjective: Use ggplot2 to explore relationships and distributions. This plot shows that—even on a log scale—the average number of playlist appearances barely budges as Spotify “popularity” rises. Most tracks sit right around one playlist appearance on average, and you only see small blips up to about 1.1–1.14 appearances per song at popularity scores in the low-60s and mid-70s. In other words, songs with higher Spotify popularity aren’t showing up in dramatically more playlists; the relationship is essentially flat.\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ lubridate 1.9.4\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ jsonlite::flatten()     masks purrr::flatten()\n✖ rvest::guess_encoding() masks readr::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n# A tibble: 6 × 3\n  track_id               raw_date            release_year\n  &lt;chr&gt;                  &lt;dttm&gt;                     &lt;dbl&gt;\n1 02UnamzTn2rySwzcMkq5qx 2002-01-01 00:00:00         2002\n2 02opp1cycqiFNDpLd2o1J3 2016-12-09 00:00:00         2016\n3 03AhYPRQeOqG2j54Tdg94E 1985-01-01 00:00:00         1985\n4 03WuFsWpkytZ6c5iidS8Im 2007-06-25 00:00:00         2007\n5 06L1apH8kLF47dbhZ4Zg9A 2016-03-09 00:00:00         2016\n6 07Tx168RSsUS1HqkDIOZbH 2007-09-11 00:00:00         2007\n\n\nPearson r = 0.007 \n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nTask 6: Finding Related Songs\nObjective: Implement heuristics to find potential playlist candidates based on anchor songs.\nSummary: Use co-occurrence, audio feature similarity, artist match, and user-defined heuristics to gather a pool of candidate tracks, ensuring diversity in popularity.\nSteps: 1. Co-occurrence heuristic: - Filter playlists_df for playlists containing anchor track(s), count other tracks, sort by frequency. 2. Key & tempo similarity: - Identify anchor key and tempo; filter songs_df where key == anchor_key and abs(tempo - anchor_tempo) &lt; threshold. 3. Same artist: - filter(artist_name %in% anchor_artists). 4. Same year + audio features: - Filter songs_df for release_year == anchor_year and abs(acousticness - anchor_acousticness) &lt; tol, similarly for danceability. 5. Custom heuristic: - E.g., high valence similarity or shared genre tags. 6. Combine & filter: - Bind all candidate sets, remove duplicates, ensure at least 20 candidates and ≥8 below the popularity threshold.\n\n\n[1] \"7oK9VyNzrYvRFo7nQEYkWN\" \"47aQT2aV12TyilaoYi1NiD\" \"3SwlakM6VX47IwG0Wll5ek\"\n\n\n[1] 51\n\n\n# A tibble: 50 × 3\n   track_id               track_name                                     n\n   &lt;chr&gt;                  &lt;chr&gt;                                      &lt;int&gt;\n 1 6GIrIt2M39wEGwjCQjGChX The Great Escape                               2\n 2 0UaMYEvWZi0ZqiDOoHU3YI Lose Control (feat. Ciara & Fat Man Scoop)     1\n 3 0WqIKmW4BTrj3eJFmnCKMv Crazy In Love                                  1\n 4 0XUfyU2QviPAs6bxSpXYG4 Yeah!                                          1\n 5 0uqPG793dkDDN7sCUJJIVC Where Is The Love?                             1\n 6 12qZHAeOyTf93YAWvGDTat All The Small Things                           1\n 7 19Js5ypV6JKn4DMExHQbGc Stacy's Mom                                    1\n 8 1AWQoqb9bSvzTjaLralEkT Rock Your Body                                 1\n 9 1Bv0Yl01xBDZD4OQP93fyl Ice Box                                        1\n10 1HwpWwa6bnqqRhK8agG4RS Beautiful Soul                                 1\n# ℹ 40 more rows\n\n\n\n\nTask 7: Creating My Playlist\nObjective: Select ~12 tracks, visualize metric progression, and assess playlist structure.\nSummary: From the candidate pool, choose a balanced set of familiar and novel tracks, order for flow, and plot metrics across track positions to evaluate “rise and fall.”\nThis four-panel plot shows how each audio feature changes over the course of the 12-song sequence: Danceability (top-left): Starts high in slots 1–4 (around 0.8), dips in the middle (tracks 5–8 ~0.68–0.70), then climbs back up at the end (tracks 9–12 ~0.79–0.82). Energy (top-right): A very similar arc—peaking early at ~0.9, dropping to ~0.65–0.7 through the midsection, and then returning to ~0.9 for your final pair. Popularity (bottom-left): Your big hits occupy positions 1–4 (popularity ~75–80), you lean into deeper cuts in slots 5–9 (popularity ~65–70), and close with another high-popularity finale (~82). Valence (bottom-right): Follows the same “rise → fall → rise” curve: very positive early tracks (~0.9), moodier middle (~0.6), then bright, upbeat closers (~0.8). In short: all four metrics trace a classic Stinson “rise-and-fall-and-rise” profile—high-energy, highly danceable openers; a reflective, lower-energy midsection; and a triumphant, feel-good finish.\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nDeliverable: The Ultimate Playlist\n\nPlaylist Title\nMidnight Drive: Rise, Fall, and Rise Again\n\n\nDescription\nMidnight Drive takes listeners on an emotional journey through late–night moods and dawn’s optimism. Opening with high‑energy, euphoric tracks, it dips into reflective, moodier mid‑section cuts before culminating in celebratory, feel‑good closers. This arc mirrors the ebb and flow of a nocturnal cityscape—starting under neon lights, pausing in contemplative twilight, and ending with an exhilarating sunrise.\n\n\nDesign Principles\n\nMetric Arc: Each audio feature (danceability, energy, popularity, valence) follows a “rise → fall → rise” trajectory, keeping listeners engaged through dynamic shifts.\nTempo Flow: Smooth transitions of BPM within ±5 BPM between adjacent tracks ensure seamless pacing.\nThematic Unity: Lyrics and mood center on themes of movement, reflection, and renewal—ideal for a late‑night drive.\nNovelty & Familiarity: Balanced mix of chart hits and under‑the‑radar gems (≥3 below the popularity threshold) to maintain intrigue and discovery.\n\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nThis visualization demonstrates the playlist’s intentional “rise, fall, and rise” structure across all four key audio metrics, reinforcing why Midnight Drive stands as The Ultimate Playlist."
  },
  {
    "objectID": "mp03.html#quarto",
    "href": "mp03.html#quarto",
    "title": "MP03 Submission: The Ultimate Playlist",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "mp03.html#running-code",
    "href": "mp03.html#running-code",
    "title": "MP03 Submission: The Ultimate Playlist",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\nLoading required package: stringr\n\n\nLoading required package: readr\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nLoading required package: fs\n\n\n# A tibble: 6 × 19\n  id      name  artists duration_ms release_date  year acousticness danceability\n  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 6KbQ3u… Sing… ['Carl…      158648 1928          1928        0.995        0.708\n2 6KuQTI… Fant… ['Robe…      282133 1928          1928        0.994        0.379\n3 6L63VW… Chap… ['Sewe…      104300 1928          1928        0.604        0.749\n4 6M94Fk… Beba… ['Fran…      180760 9/25/28       1928        0.995        0.781\n5 6N6tiF… Polo… ['Fréd…      687733 1928          1928        0.99         0.21 \n6 6NxAf7… Sche… ['Feli…      352600 1928          1928        0.995        0.424\n# ℹ 11 more variables: energy &lt;dbl&gt;, instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, speechiness &lt;dbl&gt;, tempo &lt;dbl&gt;, valence &lt;dbl&gt;, mode &lt;dbl&gt;,\n#   key &lt;dbl&gt;, popularity &lt;dbl&gt;, explicit &lt;dbl&gt;\n\n\nThe echo: false option disables the printing of code (only output is displayed).\n\n\nLoading required package: tidyr\n\n\nRows: 226,813\nColumns: 19\n$ id               &lt;chr&gt; \"6KbQ3uYMLKb5jDxLF7wYDD\", \"6KuQTIu1KoTTkLXKrwlLPV\", \"…\n$ name             &lt;chr&gt; \"Singende Bataillone 1. Teil\", \"Fantasiestücke, Op. 1…\n$ duration_ms      &lt;dbl&gt; 158648, 282133, 282133, 104300, 180760, 687733, 68773…\n$ release_date     &lt;chr&gt; \"1928\", \"1928\", \"1928\", \"1928\", \"9/25/28\", \"1928\", \"1…\n$ year             &lt;dbl&gt; 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,…\n$ acousticness     &lt;dbl&gt; 0.995, 0.994, 0.994, 0.604, 0.995, 0.990, 0.990, 0.99…\n$ danceability     &lt;dbl&gt; 0.708, 0.379, 0.379, 0.749, 0.781, 0.210, 0.210, 0.42…\n$ energy           &lt;dbl&gt; 0.1950, 0.0135, 0.0135, 0.2200, 0.1300, 0.2040, 0.204…\n$ instrumentalness &lt;dbl&gt; 0.563, 0.901, 0.901, 0.000, 0.887, 0.908, 0.908, 0.91…\n$ liveness         &lt;dbl&gt; 0.1510, 0.0763, 0.0763, 0.1190, 0.1110, 0.0980, 0.098…\n$ loudness         &lt;dbl&gt; -12.428, -28.454, -28.454, -19.924, -14.734, -16.829,…\n$ speechiness      &lt;dbl&gt; 0.0506, 0.0462, 0.0462, 0.9290, 0.0926, 0.0424, 0.042…\n$ tempo            &lt;dbl&gt; 118.469, 83.972, 83.972, 107.177, 108.003, 62.149, 62…\n$ valence          &lt;dbl&gt; 0.7790, 0.0767, 0.0767, 0.8800, 0.7200, 0.0693, 0.069…\n$ mode             &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,…\n$ key              &lt;dbl&gt; 10, 8, 8, 5, 1, 11, 11, 6, 6, 11, 11, 1, 9, 9, 9, 10,…\n$ popularity       &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ explicit         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ artist           &lt;chr&gt; \"Carl Woitschach\", \"Robert Schumann\", \"Vladimir Horow…"
  },
  {
    "objectID": "mp03.html#introduction",
    "href": "mp03.html#introduction",
    "title": "MP03 Submission: The Ultimate Playlist",
    "section": "",
    "text": "In this mini-project, we will combine two Spotify data exports—song characteristics and user playlists—to create The Ultimate Playlist. We will implement functions to ingest and clean data, perform exploratory and inferential analyses, visualize key patterns, and curate a playlist based on both quantitative and qualitative criteria."
  },
  {
    "objectID": "mp03.html#task-1-song-characteristics-dataset",
    "href": "mp03.html#task-1-song-characteristics-dataset",
    "title": "MP03 Submission: The Ultimate Playlist",
    "section": "",
    "text": "Loading required package: stringr\n\n\nLoading required package: readr\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nLoading required package: fs\n\n\n# A tibble: 6 × 19\n  id      name  artists duration_ms release_date  year acousticness danceability\n  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 6KbQ3u… Sing… ['Carl…      158648 1928          1928        0.995        0.708\n2 6KuQTI… Fant… ['Robe…      282133 1928          1928        0.994        0.379\n3 6L63VW… Chap… ['Sewe…      104300 1928          1928        0.604        0.749\n4 6M94Fk… Beba… ['Fran…      180760 9/25/28       1928        0.995        0.781\n5 6N6tiF… Polo… ['Fréd…      687733 1928          1928        0.99         0.21 \n6 6NxAf7… Sche… ['Feli…      352600 1928          1928        0.995        0.424\n# ℹ 11 more variables: energy &lt;dbl&gt;, instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, speechiness &lt;dbl&gt;, tempo &lt;dbl&gt;, valence &lt;dbl&gt;, mode &lt;dbl&gt;,\n#   key &lt;dbl&gt;, popularity &lt;dbl&gt;, explicit &lt;dbl&gt;\n\n\nLoading required package: tidyr\n\n\nRows: 226,813\nColumns: 19\n$ id               &lt;chr&gt; \"6KbQ3uYMLKb5jDxLF7wYDD\", \"6KuQTIu1KoTTkLXKrwlLPV\", \"…\n$ name             &lt;chr&gt; \"Singende Bataillone 1. Teil\", \"Fantasiestücke, Op. 1…\n$ duration_ms      &lt;dbl&gt; 158648, 282133, 282133, 104300, 180760, 687733, 68773…\n$ release_date     &lt;chr&gt; \"1928\", \"1928\", \"1928\", \"1928\", \"9/25/28\", \"1928\", \"1…\n$ year             &lt;dbl&gt; 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,…\n$ acousticness     &lt;dbl&gt; 0.995, 0.994, 0.994, 0.604, 0.995, 0.990, 0.990, 0.99…\n$ danceability     &lt;dbl&gt; 0.708, 0.379, 0.379, 0.749, 0.781, 0.210, 0.210, 0.42…\n$ energy           &lt;dbl&gt; 0.1950, 0.0135, 0.0135, 0.2200, 0.1300, 0.2040, 0.204…\n$ instrumentalness &lt;dbl&gt; 0.563, 0.901, 0.901, 0.000, 0.887, 0.908, 0.908, 0.91…\n$ liveness         &lt;dbl&gt; 0.1510, 0.0763, 0.0763, 0.1190, 0.1110, 0.0980, 0.098…\n$ loudness         &lt;dbl&gt; -12.428, -28.454, -28.454, -19.924, -14.734, -16.829,…\n$ speechiness      &lt;dbl&gt; 0.0506, 0.0462, 0.0462, 0.9290, 0.0926, 0.0424, 0.042…\n$ tempo            &lt;dbl&gt; 118.469, 83.972, 83.972, 107.177, 108.003, 62.149, 62…\n$ valence          &lt;dbl&gt; 0.7790, 0.0767, 0.0767, 0.8800, 0.7200, 0.0693, 0.069…\n$ mode             &lt;dbl&gt; 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,…\n$ key              &lt;dbl&gt; 10, 8, 8, 5, 1, 11, 11, 6, 6, 11, 11, 1, 9, 9, 9, 10,…\n$ popularity       &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ explicit         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ artist           &lt;chr&gt; \"Carl Woitschach\", \"Robert Schumann\", \"Vladimir Horow…"
  }
]